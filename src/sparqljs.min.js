require=function e(t,r,a){function i(n,u){if(!r[n]){if(!t[n]){var o="function"==typeof require&&require;if(!u&&o)return o(n,!0);if(s)return s(n,!0);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}var l=r[n]={exports:{}};t[n][0].call(l.exports,(function(e){return i(t[n][1][e]||e)}),l,l.exports,e,t,r,a)}return r[n].exports}for(var s="function"==typeof require&&require,n=0;n<a.length;n++)i(a[n]);return i}({1:[function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){void 0===a&&(a=r),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,a){void 0===a&&(a=r),e[a]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),i(e("./lib/BlankNode"),r),i(e("./lib/DataFactory"),r),i(e("./lib/DefaultGraph"),r),i(e("./lib/Literal"),r),i(e("./lib/NamedNode"),r),i(e("./lib/Quad"),r),i(e("./lib/Variable"),r)},{"./lib/BlankNode":2,"./lib/DataFactory":3,"./lib/DefaultGraph":4,"./lib/Literal":5,"./lib/NamedNode":6,"./lib/Quad":7,"./lib/Variable":8}],2:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.BlankNode=void 0;r.BlankNode=class{constructor(e){this.termType="BlankNode",this.value=e}equals(e){return!!e&&"BlankNode"===e.termType&&e.value===this.value}}},{}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.DataFactory=void 0;const a=e("./BlankNode"),i=e("./DefaultGraph"),s=e("./Literal"),n=e("./NamedNode"),u=e("./Quad"),o=e("./Variable");let c=0;r.DataFactory=class{constructor(e){this.blankNodeCounter=0,e=e||{},this.blankNodePrefix=e.blankNodePrefix||`df_${c++}_`}namedNode(e){return new n.NamedNode(e)}blankNode(e){return new a.BlankNode(e||`${this.blankNodePrefix}${this.blankNodeCounter++}`)}literal(e,t){return new s.Literal(e,t)}variable(e){return new o.Variable(e)}defaultGraph(){return i.DefaultGraph.INSTANCE}quad(e,t,r,a){return new u.Quad(e,t,r,a||this.defaultGraph())}fromTerm(e){switch(e.termType){case"NamedNode":return this.namedNode(e.value);case"BlankNode":return this.blankNode(e.value);case"Literal":return e.language?this.literal(e.value,e.language):e.datatype.equals(s.Literal.XSD_STRING)?this.literal(e.value):this.literal(e.value,this.fromTerm(e.datatype));case"Variable":return this.variable(e.value);case"DefaultGraph":return this.defaultGraph();case"Quad":return this.quad(this.fromTerm(e.subject),this.fromTerm(e.predicate),this.fromTerm(e.object),this.fromTerm(e.graph))}}fromQuad(e){return this.fromTerm(e)}resetBlankNodeCounter(){this.blankNodeCounter=0}}},{"./BlankNode":2,"./DefaultGraph":4,"./Literal":5,"./NamedNode":6,"./Quad":7,"./Variable":8}],4:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.DefaultGraph=void 0;class a{constructor(){this.termType="DefaultGraph",this.value=""}equals(e){return!!e&&"DefaultGraph"===e.termType}}r.DefaultGraph=a,a.INSTANCE=new a},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Literal=void 0;const a=e("./NamedNode");class i{constructor(e,t){this.termType="Literal",this.value=e,"string"==typeof t?(this.language=t,this.datatype=i.RDF_LANGUAGE_STRING):t?(this.language="",this.datatype=t):(this.language="",this.datatype=i.XSD_STRING)}equals(e){return!!e&&"Literal"===e.termType&&e.value===this.value&&e.language===this.language&&this.datatype.equals(e.datatype)}}r.Literal=i,i.RDF_LANGUAGE_STRING=new a.NamedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),i.XSD_STRING=new a.NamedNode("http://www.w3.org/2001/XMLSchema#string")},{"./NamedNode":6}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.NamedNode=void 0;r.NamedNode=class{constructor(e){this.termType="NamedNode",this.value=e}equals(e){return!!e&&"NamedNode"===e.termType&&e.value===this.value}}},{}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Quad=void 0;r.Quad=class{constructor(e,t,r,a){this.termType="Quad",this.value="",this.subject=e,this.predicate=t,this.object=r,this.graph=a}equals(e){return!!e&&("Quad"===e.termType||!e.termType)&&this.subject.equals(e.subject)&&this.predicate.equals(e.predicate)&&this.object.equals(e.object)&&this.graph.equals(e.graph)}}},{}],8:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Variable=void 0;r.Variable=class{constructor(e){this.termType="Variable",this.value=e}equals(e){return!!e&&"Variable"===e.termType&&e.value===this.value}}},{}],9:[function(e,t,r){function a(e){this._options=e=e||{};var t=e.prefixes||{};this._prefixByIri={};var r=[];for(var a in t){var i=t[a];o(i)&&(this._prefixByIri[i]=a,r.push(i))}var s=r.join("|").replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&");this._prefixRegex=new RegExp("^("+s+")([a-zA-Z][\\-_a-zA-Z0-9]*)$"),this._usedPrefixes={},this._sparqlStar=e.sparqlStar,this._indent=o(e.indent)?e.indent:"  ",this._newline=o(e.newline)?e.newline:"\n",this._explicitDatatype=Boolean(e.explicitDatatype)}a.prototype.toQuery=function(e){var t="";return e.queryType&&(t+=e.queryType.toUpperCase()+" "),e.reduced&&(t+="REDUCED "),e.distinct&&(t+="DISTINCT "),e.variables?t+=p(e.variables,void 0,(function(e){return c(e)?this.toEntity(e):"("+this.toExpression(e.expression)+" AS "+u(e.variable)+")"}),this)+" ":e.template&&(t+=this.group(e.template,!0)+this._newline),e.from&&(t+=this.graphs("FROM ",e.from.default)+this.graphs("FROM NAMED ",e.from.named)),e.where&&(t+="WHERE "+this.group(e.where,!0)+this._newline),e.updates&&(t+=p(e.updates,";"+this._newline,this.toUpdate,this)),e.group&&(t+="GROUP BY "+p(e.group,void 0,(function(e){var t=c(e.expression)?this.toEntity(e.expression):"("+this.toExpression(e.expression)+")";return e.variable?"("+t+" AS "+u(e.variable)+")":t}),this)+this._newline),e.having&&(t+="HAVING ("+p(e.having,void 0,this.toExpression,this)+")"+this._newline),e.order&&(t+="ORDER BY "+p(e.order,void 0,(function(e){var t="("+this.toExpression(e.expression)+")";return e.descending?"DESC "+t:t}),this)+this._newline),e.offset&&(t+="OFFSET "+e.offset+this._newline),e.limit&&(t+="LIMIT "+e.limit+this._newline),e.values&&(t+=this.values(e)),(t=this.baseAndPrefixes(e)+t).trim()},a.prototype.baseAndPrefixes=function(e){var t=e.base?"BASE <"+e.base+">"+this._newline:"",r="";for(var a in e.prefixes)(this._options.allPrefixes||this._usedPrefixes[a])&&(r+="PREFIX "+a+": <"+e.prefixes[a]+">"+this._newline);return t+r},a.prototype.toPattern=function(e){var t=e.type||e instanceof Array&&"array"||(e.subject&&e.predicate&&e.object?"triple":"");if(!(t in this))throw new Error("Unknown entry type: "+t);return this[t](e)},a.prototype.triple=function(e){return this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+"."},a.prototype.array=function(e){return p(e,this._newline,this.toPattern,this)},a.prototype.bgp=function(e){return this.encodeTriples(e.triples)},a.prototype.encodeTriples=function(e){if(!e.length)return"";for(var t=[],r=void 0,a=void 0,i=0;i<e.length;i++){var s=e[i];l(s.subject,r)?l(s.predicate,a)?t.push(","):(a=s.predicate,t.push(";"+this._newline,this._indent,this.toEntity(a))):(r&&t.push("."+this._newline),r=s.subject,a=s.predicate,t.push(this.toEntity(r)," ",this.toEntity(a))),t.push(" ",this.toEntity(s.object))}return t.push("."),t.join("")},a.prototype.graph=function(e){return"GRAPH "+this.toEntity(e.name)+" "+this.group(e)},a.prototype.graphs=function(e,t){return t&&0!==t.length?p(t,"",(function(t){return e+this.toEntity(t)+this._newline}),this):""},a.prototype.group=function(e,t){return-1===(e=!0!==t?this.array(e.patterns||e.triples):this.toPattern("group"!==e.type?e:e.patterns)).indexOf(this._newline)?"{ "+e+" }":"{"+this._newline+this.indent(e)+this._newline+"}"},a.prototype.query=function(e){return this.toQuery(e)},a.prototype.filter=function(e){return"FILTER("+this.toExpression(e.expression)+")"},a.prototype.bind=function(e){return"BIND("+this.toExpression(e.expression)+" AS "+u(e.variable)+")"},a.prototype.optional=function(e){return"OPTIONAL "+this.group(e)},a.prototype.union=function(e){return p(e.patterns,this._newline+"UNION"+this._newline,(function(e){return this.group(e,!0)}),this)},a.prototype.minus=function(e){return"MINUS "+this.group(e)},a.prototype.values=function(e){var t,r,a=Object.keys(e.values.reduce((function(e,t){for(var r in t)e[r]=!0;return e}),{}));return 1===a.length?t=r="":(t="(",r=")"),"VALUES "+t+a.join(" ")+r+" {"+this._newline+p(e.values,this._newline,(function(e){return"  "+t+p(a,void 0,(function(t){return e[t]?this.toEntity(e[t]):"UNDEF"}),this)+r}),this)+this._newline+"}"},a.prototype.service=function(e){return"SERVICE "+(e.silent?"SILENT ":"")+this.toEntity(e.name)+" "+this.group(e)},a.prototype.toExpression=function(e){if(c(e))return this.toEntity(e);switch(e.type.toLowerCase()){case"aggregate":return e.aggregation.toUpperCase()+"("+(e.distinct?"DISTINCT ":"")+this.toExpression(e.expression)+("string"==typeof e.separator?'; SEPARATOR = "'+e.separator.replace(i,s)+'"':"")+")";case"functioncall":return this.toEntity(e.function)+"("+p(e.args,", ",this.toExpression,this)+")";case"operation":var t=e.operator.toUpperCase(),r=e.args||[];switch(e.operator.toLowerCase()){case"<":case">":case">=":case"<=":case"&&":case"||":case"=":case"!=":case"+":case"-":case"*":case"/":return(c(r[0])?this.toEntity(r[0]):"("+this.toExpression(r[0])+")")+" "+t+" "+(c(r[1])?this.toEntity(r[1]):"("+this.toExpression(r[1])+")");case"!":return"!("+this.toExpression(r[0])+")";case"uplus":return"+("+this.toExpression(r[0])+")";case"uminus":return"-("+this.toExpression(r[0])+")";case"notin":t="NOT IN";case"in":return this.toExpression(r[0])+" "+t+"("+(o(r[1])?r[1]:p(r[1],", ",this.toExpression,this))+")";case"notexists":t="NOT EXISTS";case"exists":return t+" "+this.group(r[0],!0);default:return t+"("+p(r,", ",this.toExpression,this)+")"}default:throw new Error("Unknown expression type: "+e.type)}},a.prototype.toEntity=function(e){if(c(e))switch(e.termType){case"Wildcard":return"*";case"Variable":return u(e);case"BlankNode":return"_:"+e.value;case"Literal":var t=e.value||"",r=e.language||"",a=e.datatype;if(e='"'+t.replace(i,s)+'"',r)e+="@"+r;else if(a){if(!this._explicitDatatype)switch(a.value){case"http://www.w3.org/2001/XMLSchema#string":return e;case"http://www.w3.org/2001/XMLSchema#integer":if(/^\d+$/.test(t))return t+" "}e+="^^"+this.encodeIRI(a.value)}return e;case"Quad":if(!this._sparqlStar)throw new Error("SPARQL* support is not enabled");return e.graph&&"DefaultGraph"!==e.graph.termType?"<< GRAPH "+this.toEntity(e.graph)+" { "+this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+" }  >>":"<< "+this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+" >>";default:return this.encodeIRI(e.value)}else{var n=e.items.map(this.toEntity,this),o=e.pathType;switch(o){case"^":case"!":return o+n[0];case"*":case"+":case"?":return"("+n[0]+o+")";default:return"("+n.join(o)+")"}}};var i=/["\\\t\n\r\b\f]/g,s=function(e){return n[e]},n={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};function u(e){return"?"+e.value}function o(e){return"string"==typeof e}function c(e){return"string"==typeof e.termType}function l(e,t){if(!e||!c(e))return!1;if(!t||!c(t))return!1;if(e.termType!==t.termType)return!1;switch(e.termType){case"Literal":return e.value===t.value&&e.language===t.language&&l(e.datatype,t.datatype);case"Quad":return l(e.subject,t.subject)&&l(e.predicate,t.predicate)&&l(e.object,t.object)&&l(e.graph,t.graph);default:return e.value===t.value}}function p(e,t,r,a){return e.map(r,a).join(o(t)?t:" ")}a.prototype.encodeIRI=function(e){var t=this._prefixRegex.exec(e);if(t){var r=this._prefixByIri[t[1]];return this._usedPrefixes[r]=!0,r+":"+t[2]}return"<"+e+">"},a.prototype.toUpdate=function(e){switch(e.type||e.updateType){case"load":return"LOAD"+(e.source?" "+this.toEntity(e.source):"")+(e.destination?" INTO GRAPH "+this.toEntity(e.destination):"");case"insert":return"INSERT DATA "+this.group(e.insert,!0);case"delete":return"DELETE DATA "+this.group(e.delete,!0);case"deletewhere":return"DELETE WHERE "+this.group(e.delete,!0);case"insertdelete":return(e.graph?"WITH "+this.toEntity(e.graph)+this._newline:"")+(e.delete.length?"DELETE "+this.group(e.delete,!0)+this._newline:"")+(e.insert.length?"INSERT "+this.group(e.insert,!0)+this._newline:"")+(e.using?this.graphs("USING ",e.using.default):"")+(e.using?this.graphs("USING NAMED ",e.using.named):"")+"WHERE "+this.group(e.where,!0);case"add":case"copy":case"move":return e.type.toUpperCase()+" "+(e.silent?"SILENT ":"")+(e.source.default?"DEFAULT":this.toEntity(e.source.name))+" TO "+this.toEntity(e.destination.name);case"create":case"clear":case"drop":return e.type.toUpperCase()+(e.silent?" SILENT ":" ")+(e.graph.default?"DEFAULT":e.graph.named?"NAMED":e.graph.all?"ALL":"GRAPH "+this.toEntity(e.graph.name));default:throw new Error("Unknown update query type: "+e.type)}},a.prototype.indent=function(e){return e.replace(/^/gm,this._indent)},t.exports=function(e={}){return{stringify:function(t){var r=Object.create(e);return r.prefixes=t.prefixes,new a(r).toQuery(t)},createGenerator:function(){return new a(e)}}}},{}],10:[function(e,t,r){var a=function(){var t=function(e,t,r,a){for(r=r||{},a=e.length;a--;r[e[a]]=t);return r},r=[6,12,13,15,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],a=[2,247],i=[100,110,113,115,116,123,126,131,329,330,331,332,333],s=[2,409],n=[1,18],u=[1,27],o=[13,16,45,197,224,229,308],c=[28,29,53],l=[28,53],p=[1,42],h=[1,45],f=[1,41],y=[1,44],F=[123,126],d=[1,67],E=[39,45,87],b=[13,16,45,197,224,308],_=[1,87],D=[2,281],g=[1,86],T=[13,16,45,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],A=[6,28,29,53,63,70,73,81,83,85],N=[6,13,16,28,29,53,63,70,73,81,83,85,87,308],m=[6,13,16,28,29,45,53,63,70,73,81,82,83,85,87,89,197,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314],S=[6,13,16,28,29,31,39,45,47,48,53,63,70,73,81,82,83,85,87,89,109,112,121,123,126,128,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,337,338,340,341,342,343,344,345,346],I=[13,16,308],C=[112,132,327,334],k=[13,16,112,132,308],v=[1,111],O=[1,117],R=[112,132,327,328,334],L=[13,16,112,132,308,328],w=[28,29,45,53,87],P=[1,138],x=[1,151],$=[1,128],U=[1,127],G=[1,129],B=[1,140],j=[1,141],V=[1,142],M=[1,143],Q=[1,144],q=[1,145],H=[1,147],W=[1,148],Y=[2,457],z=[1,158],X=[1,159],Z=[1,160],K=[1,152],J=[1,153],ee=[1,156],te=[1,171],re=[1,172],ae=[1,173],ie=[1,174],se=[1,175],ne=[1,176],ue=[1,167],oe=[1,168],ce=[1,169],le=[1,170],pe=[1,157],he=[1,166],fe=[1,161],ye=[1,162],Fe=[1,163],de=[1,164],Ee=[1,165],be=[6,13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],_e=[1,195],De=[6,31,73,81,83,85],ge=[2,285],Te=[1,199],Ae=[1,201],Ne=[6,31,70,73,81,83,85],me=[2,283],Se=[1,207],Ie=[1,218],Ce=[1,223],ke=[1,219],ve=[1,225],Oe=[1,226],Re=[1,224],Le=[6,63,70,73,81,83,85],we=[1,236],Pe=[2,334],xe=[1,243],$e=[1,241],Ue=[6,193],Ge=[2,349],Be=[2,339],je=[28,128],Ve=[47,48,193,272],Me=[47,48,193,242,272],Qe=[47,48,193,242,246,272],qe=[47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,341,342,343,344,345,346],He=[39,47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,338,341,342,343,344,345,346],We=[1,271],Ye=[1,270],ze=[6,13,16,29,31,39,45,47,48,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],Xe=[1,281],Ze=[1,280],Ke=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],Je=[45,89],et=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],tt=[13,16,31,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],rt=[31,89],at=[48,87],it=[6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338],st=[6,13,16,39,45,48,82,87,89,231,263,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338,340],nt=[1,313],ut=[6,85],ot=[6,31,81,83,85],ct=[2,361],lt=[2,353],pt=[1,343],ht=[31,112,335],ft=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],yt=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335],Ft=[6,109,193],dt=[31,112],Et=[13,16,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],bt=[1,390],_t=[1,391],Dt=[13,16,87,197,308,314],gt=[13,16,39,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],Tt=[1,417],At=[1,418],Nt=[13,16,48,197,229,308],mt=[6,31,85],St=[6,13,16,31,45,73,81,83,85,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],It=[6,13,16,29,31,45,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,231,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,346,347,348,349,350,351],Ct=[29,31,85,112,159,160,161,163,164],kt=[1,443],vt=[1,444],Ot=[1,449],Rt=[31,112,193,232,318,335],Lt=[13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],wt=[13,16,31,45,48,82,87,89,112,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],Pt=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],xt=[13,16,31,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],$t=[31,45],Ut=[1,507],Gt=[1,508],Bt=[6,13,16,29,31,39,45,47,48,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,336,338,341,342,343,344,345,346,347,348,349,350,351],jt=[29,31,85,112,159,160,161,163,164,335],Vt=[6,13,16,31,45,70,73,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],Mt=[13,16,31,45,48,82,87,89,112,193,197,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],Qt=[2,352],qt=[13,16,197,308,314],Ht=[1,565],Wt=[6,13,16,31,45,76,78,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],Yt=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],zt=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],Xt=[13,16,87,308],Zt=[2,364],Kt=[29,31,85,112,159,160,161,163,164,193,232,318,335],Jt=[31,112,193,232,272,318,335],er=[2,359],tr=[13,16,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],rr=[29,31,85,112,159,160,161,163,164,193,232,272,318,335],ar=[13,16,31,45,82,87,89,112,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],ir=[2,347],sr={trace:function(){},yy:{},symbols_:{error:2,QueryOrUpdate:3,Prologue:4,QueryOrUpdate_group0:5,EOF:6,Query:7,Qry:8,Query_option0:9,Prologue_repetition0:10,BaseDecl:11,BASE:12,IRIREF:13,PrefixDecl:14,PREFIX:15,PNAME_NS:16,SelectClauseWildcard:17,Qry_repetition0:18,WhereClause:19,SolutionModifierNoGroup:20,SelectClauseVars:21,Qry_repetition1:22,SolutionModifier:23,CONSTRUCT:24,ConstructTemplate:25,Qry_repetition2:26,Qry_repetition3:27,WHERE:28,"{":29,Qry_option0:30,"}":31,DESCRIBE:32,Qry_group0:33,Qry_repetition4:34,Qry_option1:35,ASK:36,Qry_repetition5:37,SelectClauseBase:38,"*":39,SelectClauseVars_repetition_plus0:40,SELECT:41,SelectClauseBase_option0:42,SelectClauseItem:43,Var:44,"(":45,Expression:46,AS:47,")":48,SubSelect:49,SubSelect_option0:50,SubSelect_option1:51,DatasetClause:52,FROM:53,DatasetClause_option0:54,iri:55,WhereClause_option0:56,GroupGraphPattern:57,SolutionModifier_option0:58,SolutionModifierNoGroup_option0:59,SolutionModifierNoGroup_option1:60,SolutionModifierNoGroup_option2:61,GroupClause:62,GROUP:63,BY:64,GroupClause_repetition_plus0:65,GroupCondition:66,BuiltInCall:67,FunctionCall:68,HavingClause:69,HAVING:70,HavingClause_repetition_plus0:71,OrderClause:72,ORDER:73,OrderClause_repetition_plus0:74,OrderCondition:75,ASC:76,BrackettedExpression:77,DESC:78,Constraint:79,LimitOffsetClauses:80,LIMIT:81,INTEGER:82,OFFSET:83,ValuesClause:84,VALUES:85,InlineData:86,VAR:87,InlineData_repetition0:88,NIL:89,InlineData_repetition1:90,InlineData_repetition_plus2:91,InlineData_repetition3:92,DataBlock:93,DataBlockValueList:94,DataBlockValueList_repetition_plus0:95,Update:96,Update_repetition0:97,Update1:98,Update_option0:99,LOAD:100,Update1_option0:101,Update1_option1:102,Update1_group0:103,Update1_option2:104,GraphRefAll:105,Update1_group1:106,Update1_option3:107,GraphOrDefault:108,TO:109,CREATE:110,Update1_option4:111,GRAPH:112,INSERTDATA:113,QuadPattern:114,DELETEDATA:115,DELETEWHERE:116,Update1_option5:117,InsertDeleteClause:118,Update1_repetition0:119,IntoGraphClause:120,INTO:121,GraphRef:122,DELETE:123,InsertDeleteClause_option0:124,InsertClause:125,INSERT:126,UsingClause:127,USING:128,UsingClause_option0:129,WithClause:130,WITH:131,DEFAULT:132,GraphOrDefault_option0:133,GraphRefAll_group0:134,Quads:135,Quads_option0:136,Quads_repetition0:137,QuadsNotTriples:138,VarOrIri:139,QuadsNotTriples_option0:140,QuadsNotTriples_option1:141,QuadsNotTriples_option2:142,TriplesTemplate:143,TriplesTemplate_repetition0:144,TriplesSameSubject:145,TriplesTemplate_option0:146,GroupGraphPatternSub:147,GroupGraphPatternSub_option0:148,GroupGraphPatternSub_repetition0:149,GroupGraphPatternSubTail:150,GraphPatternNotTriples:151,GroupGraphPatternSubTail_option0:152,GroupGraphPatternSubTail_option1:153,TriplesBlock:154,TriplesBlock_repetition0:155,TriplesSameSubjectPath:156,TriplesBlock_option0:157,GroupOrUnionGraphPattern:158,OPTIONAL:159,MINUS:160,SERVICE:161,GraphPatternNotTriples_option0:162,FILTER:163,BIND:164,InlineDataOneVar:165,InlineDataFull:166,InlineDataOneVar_repetition0:167,InlineDataFull_repetition0:168,InlineDataFull_repetition_plus1:169,InlineDataFull_repetition2:170,DataBlockValue:171,Literal:172,QuotedTriple:173,UNDEF:174,GroupOrUnionGraphPattern_repetition0:175,ArgList:176,ArgList_option0:177,ArgList_repetition0:178,ExpressionList:179,ExpressionList_repetition0:180,ConstructTemplate_option0:181,ConstructTriples:182,ConstructTriples_repetition0:183,ConstructTriples_option0:184,VarOrTermOrQuotedTP:185,PropertyListNotEmpty:186,TriplesNode:187,PropertyList:188,PropertyList_option0:189,VerbObjectList:190,PropertyListNotEmpty_repetition0:191,SemiOptionalVerbObjectList:192,";":193,SemiOptionalVerbObjectList_option0:194,Verb:195,ObjectList:196,a:197,ObjectList_repetition0:198,Object:199,GraphNode:200,Object_option0:201,PropertyListPathNotEmpty:202,TriplesNodePath:203,TriplesSameSubjectPath_option0:204,O:205,PropertyListPathNotEmpty_repetition0:206,PropertyListPathNotEmptyTail:207,O_group0:208,ObjectListPath:209,ObjectListPath_repetition0:210,ObjectPath:211,GraphNodePath:212,ObjectPath_option0:213,Path:214,Path_repetition0:215,PathSequence:216,PathSequence_repetition0:217,PathEltOrInverse:218,PathElt:219,PathPrimary:220,PathElt_option0:221,PathEltOrInverse_option0:222,IriOrA:223,"!":224,PathNegatedPropertySet:225,PathOneInPropertySet:226,PathNegatedPropertySet_repetition0:227,PathNegatedPropertySet_option0:228,"^":229,TriplesNode_repetition_plus0:230,"[":231,"]":232,TriplesNodePath_repetition_plus0:233,VarOrTermOrQuotedTPExpr:234,VarOrTerm:235,GraphTerm:236,BlankNode:237,ConditionalOrExpression:238,ConditionalAndExpression:239,ConditionalOrExpression_repetition0:240,ConditionalOrExpressionTail:241,"||":242,RelationalExpression:243,ConditionalAndExpression_repetition0:244,ConditionalAndExpressionTail:245,"&&":246,NumericExpression:247,RelationalExpression_group0:248,RelationalExpression_option0:249,IN:250,MultiplicativeExpression:251,NumericExpression_repetition0:252,AdditiveExpressionTail:253,AdditiveExpressionTail_group0:254,NumericLiteralPositive:255,AdditiveExpressionTail_repetition0:256,NumericLiteralNegative:257,AdditiveExpressionTail_repetition1:258,UnaryExpression:259,MultiplicativeExpression_repetition0:260,MultiplicativeExpressionTail:261,MultiplicativeExpressionTail_group0:262,"+":263,PrimaryExpression:264,"-":265,ExprQuotedTP:266,Aggregate:267,FUNC_ARITY0:268,FUNC_ARITY1:269,FUNC_ARITY1_SPARQL_STAR:270,FUNC_ARITY2:271,",":272,FUNC_ARITY3:273,FUNC_ARITY3_SPARQL_STAR:274,BuiltInCall_group0:275,BOUND:276,BNODE:277,BuiltInCall_option0:278,EXISTS:279,COUNT:280,Aggregate_option0:281,Aggregate_group0:282,FUNC_AGGREGATE:283,Aggregate_option1:284,GROUP_CONCAT:285,Aggregate_option2:286,Aggregate_option3:287,GroupConcatSeparator:288,SEPARATOR:289,"=":290,String:291,LANGTAG:292,"^^":293,DECIMAL:294,DOUBLE:295,BOOLEAN:296,INTEGER_POSITIVE:297,DECIMAL_POSITIVE:298,DOUBLE_POSITIVE:299,INTEGER_NEGATIVE:300,DECIMAL_NEGATIVE:301,DOUBLE_NEGATIVE:302,STRING_LITERAL1:303,STRING_LITERAL2:304,STRING_LITERAL_LONG1:305,STRING_LITERAL_LONG2:306,PrefixedName:307,PNAME_LN:308,BLANK_NODE_LABEL:309,ANON:310,QuotedTP:311,"<<":312,qtSubjectOrObject:313,">>":314,DataValueTerm:315,AnnotationPattern:316,"{|":317,"|}":318,AnnotationPatternPath:319,ExprVarOrTerm:320,QueryOrUpdate_group0_option0:321,Prologue_repetition0_group0:322,Qry_group0_repetition_plus0:323,SelectClauseBase_option0_group0:324,DISTINCT:325,REDUCED:326,NAMED:327,SILENT:328,CLEAR:329,DROP:330,ADD:331,MOVE:332,COPY:333,ALL:334,".":335,UNION:336,"|":337,"/":338,PathElt_option0_group0:339,"?":340,"!=":341,"<":342,">":343,"<=":344,">=":345,NOT:346,CONCAT:347,COALESCE:348,SUBSTR:349,REGEX:350,REPLACE:351,$accept:0,$end:1},terminals_:{2:"error",6:"EOF",12:"BASE",13:"IRIREF",15:"PREFIX",16:"PNAME_NS",24:"CONSTRUCT",28:"WHERE",29:"{",31:"}",32:"DESCRIBE",36:"ASK",39:"*",41:"SELECT",45:"(",47:"AS",48:")",53:"FROM",63:"GROUP",64:"BY",70:"HAVING",73:"ORDER",76:"ASC",78:"DESC",81:"LIMIT",82:"INTEGER",83:"OFFSET",85:"VALUES",87:"VAR",89:"NIL",100:"LOAD",109:"TO",110:"CREATE",112:"GRAPH",113:"INSERTDATA",115:"DELETEDATA",116:"DELETEWHERE",121:"INTO",123:"DELETE",126:"INSERT",128:"USING",131:"WITH",132:"DEFAULT",159:"OPTIONAL",160:"MINUS",161:"SERVICE",163:"FILTER",164:"BIND",174:"UNDEF",193:";",197:"a",224:"!",229:"^",231:"[",232:"]",242:"||",246:"&&",250:"IN",263:"+",265:"-",268:"FUNC_ARITY0",269:"FUNC_ARITY1",270:"FUNC_ARITY1_SPARQL_STAR",271:"FUNC_ARITY2",272:",",273:"FUNC_ARITY3",274:"FUNC_ARITY3_SPARQL_STAR",276:"BOUND",277:"BNODE",279:"EXISTS",280:"COUNT",283:"FUNC_AGGREGATE",285:"GROUP_CONCAT",289:"SEPARATOR",290:"=",292:"LANGTAG",293:"^^",294:"DECIMAL",295:"DOUBLE",296:"BOOLEAN",297:"INTEGER_POSITIVE",298:"DECIMAL_POSITIVE",299:"DOUBLE_POSITIVE",300:"INTEGER_NEGATIVE",301:"DECIMAL_NEGATIVE",302:"DOUBLE_NEGATIVE",303:"STRING_LITERAL1",304:"STRING_LITERAL2",305:"STRING_LITERAL_LONG1",306:"STRING_LITERAL_LONG2",308:"PNAME_LN",309:"BLANK_NODE_LABEL",310:"ANON",312:"<<",314:">>",317:"{|",318:"|}",325:"DISTINCT",326:"REDUCED",327:"NAMED",328:"SILENT",329:"CLEAR",330:"DROP",331:"ADD",332:"MOVE",333:"COPY",334:"ALL",335:".",336:"UNION",337:"|",338:"/",340:"?",341:"!=",342:"<",343:">",344:"<=",345:">=",346:"NOT",347:"CONCAT",348:"COALESCE",349:"SUBSTR",350:"REGEX",351:"REPLACE"},productions_:[0,[3,3],[7,2],[4,1],[11,2],[14,3],[8,4],[8,4],[8,5],[8,7],[8,5],[8,4],[17,2],[21,2],[38,2],[43,1],[43,5],[49,4],[49,4],[52,3],[19,2],[23,2],[20,3],[62,3],[66,1],[66,1],[66,3],[66,5],[66,1],[69,2],[72,3],[75,2],[75,2],[75,1],[75,1],[80,2],[80,2],[80,4],[80,4],[84,2],[86,4],[86,4],[86,6],[86,2],[94,3],[96,3],[98,4],[98,3],[98,5],[98,4],[98,2],[98,2],[98,2],[98,5],[120,2],[118,3],[118,1],[125,2],[127,3],[130,2],[108,1],[108,2],[122,2],[105,1],[105,1],[114,3],[135,2],[138,7],[143,3],[57,3],[57,3],[147,2],[150,3],[154,3],[151,1],[151,2],[151,2],[151,3],[151,4],[151,2],[151,6],[151,1],[93,1],[93,1],[165,4],[166,4],[166,6],[171,1],[171,1],[171,1],[171,1],[158,2],[79,1],[79,1],[79,1],[68,2],[176,1],[176,5],[179,1],[179,4],[25,3],[182,3],[145,2],[145,2],[188,1],[186,2],[192,2],[190,2],[195,1],[195,1],[196,2],[199,2],[156,2],[156,2],[202,2],[207,1],[207,2],[205,2],[209,2],[211,2],[214,2],[216,2],[219,2],[218,2],[220,1],[220,2],[220,3],[225,1],[225,1],[225,4],[226,1],[226,2],[187,3],[187,3],[203,3],[203,3],[200,1],[200,1],[212,1],[212,1],[234,1],[235,1],[235,1],[139,1],[139,1],[44,1],[236,1],[236,1],[236,1],[236,1],[46,1],[238,2],[241,2],[239,2],[245,2],[243,1],[243,3],[243,4],[247,2],[253,2],[253,2],[253,2],[251,2],[261,2],[259,2],[259,2],[259,2],[259,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[77,3],[67,1],[67,2],[67,4],[67,4],[67,6],[67,8],[67,8],[67,2],[67,4],[67,2],[67,4],[67,3],[267,5],[267,5],[267,6],[288,4],[172,1],[172,2],[172,3],[172,1],[172,1],[172,1],[172,1],[172,1],[172,1],[255,1],[255,1],[255,1],[257,1],[257,1],[257,1],[291,1],[291,1],[291,1],[291,1],[55,1],[55,1],[307,1],[307,1],[237,1],[237,1],[311,5],[173,5],[313,1],[313,1],[313,1],[313,1],[313,1],[315,1],[315,1],[315,1],[185,1],[185,1],[185,1],[316,3],[319,3],[266,5],[320,1],[320,1],[320,1],[223,1],[223,1],[321,0],[321,1],[5,1],[5,1],[5,1],[9,0],[9,1],[322,1],[322,1],[10,0],[10,2],[18,0],[18,2],[22,0],[22,2],[26,0],[26,2],[27,0],[27,2],[30,0],[30,1],[323,1],[323,2],[33,1],[33,1],[34,0],[34,2],[35,0],[35,1],[37,0],[37,2],[40,1],[40,2],[324,1],[324,1],[42,0],[42,1],[50,0],[50,1],[51,0],[51,1],[54,0],[54,1],[56,0],[56,1],[58,0],[58,1],[59,0],[59,1],[60,0],[60,1],[61,0],[61,1],[65,1],[65,2],[71,1],[71,2],[74,1],[74,2],[88,0],[88,2],[90,0],[90,2],[91,1],[91,2],[92,0],[92,2],[95,1],[95,2],[97,0],[97,4],[99,0],[99,2],[101,0],[101,1],[102,0],[102,1],[103,1],[103,1],[104,0],[104,1],[106,1],[106,1],[106,1],[107,0],[107,1],[111,0],[111,1],[117,0],[117,1],[119,0],[119,2],[124,0],[124,1],[129,0],[129,1],[133,0],[133,1],[134,1],[134,1],[134,1],[136,0],[136,1],[137,0],[137,2],[140,0],[140,1],[141,0],[141,1],[142,0],[142,1],[144,0],[144,3],[146,0],[146,1],[148,0],[148,1],[149,0],[149,2],[152,0],[152,1],[153,0],[153,1],[155,0],[155,3],[157,0],[157,1],[162,0],[162,1],[167,0],[167,2],[168,0],[168,2],[169,1],[169,2],[170,0],[170,2],[175,0],[175,3],[177,0],[177,1],[178,0],[178,3],[180,0],[180,3],[181,0],[181,1],[183,0],[183,3],[184,0],[184,1],[189,0],[189,1],[191,0],[191,2],[194,0],[194,1],[198,0],[198,3],[201,0],[201,1],[204,0],[204,1],[206,0],[206,2],[208,1],[208,1],[210,0],[210,3],[213,0],[213,1],[215,0],[215,3],[217,0],[217,3],[339,1],[339,1],[339,1],[221,0],[221,1],[222,0],[222,1],[227,0],[227,3],[228,0],[228,1],[230,1],[230,2],[233,1],[233,2],[240,0],[240,2],[244,0],[244,2],[248,1],[248,1],[248,1],[248,1],[248,1],[248,1],[249,0],[249,1],[252,0],[252,2],[254,1],[254,1],[256,0],[256,2],[258,0],[258,2],[260,0],[260,2],[262,1],[262,1],[275,1],[275,1],[275,1],[275,1],[275,1],[278,0],[278,1],[281,0],[281,1],[282,1],[282,1],[284,0],[284,1],[286,0],[286,1],[287,0],[287,1]],performAction:function(e,t,r,a,i,s,n){var u,o,c,l,p=s.length-1;switch(i){case 1:if(s[p-1]=s[p-1]||{},aa.base&&(s[p-1].base=aa.base),aa.base="",s[p-1].prefixes=aa.prefixes,aa.prefixes=null,aa.pathOnly){if("path"===s[p-1].type||"termType"in s[p-1])return s[p-1];throw new Error("Received full SPARQL query in path only mode")}if("path"===s[p-1].type||"termType"in s[p-1])throw new Error("Received only path in full SPARQL mode");if("update"===s[p-1].type){const e={};for(const t of s[p-1].updates)if("insert"===t.updateType){const r={};for(const e of t.insert)if("bgp"===e.type||"graph"===e.type)for(const t of e.triples)"BlankNode"===t.subject.termType&&(r[t.subject.value]=!0),"BlankNode"===t.predicate.termType&&(r[t.predicate.value]=!0),"BlankNode"===t.object.termType&&(r[t.object.value]=!0);for(const t of Object.keys(r)){if(e[t])throw new Error("Detected reuse blank node across different INSERT DATA clauses");e[t]=!0}}}return s[p-1];case 2:this.$={...s[p-1],...s[p],type:"query"};break;case 4:aa.base=mr(s[p]);break;case 5:aa.prefixes||(aa.prefixes={}),s[p-1]=s[p-1].substr(0,s[p-1].length-1),s[p]=mr(s[p]),aa.prefixes[s[p-1]]=s[p];break;case 6:this.$={...s[p-3],...Or(s[p-2]),...s[p-1],...s[p]};break;case 7:if(!aa.skipValidation){if(Yr(s[p-3].variables.map((e=>Hr(e.expression)))).some((e=>"count"===e.aggregation&&!(e.expression instanceof nr)))||s[p].group)for(const e of s[p-3].variables)if("Variable"===e.termType){if(!s[p].group||!s[p].group.map((e=>qr(e))).includes(qr(e)))throw Error("Projection of ungrouped variable (?"+qr(e)+")")}else if(0===Hr(e.expression).length){const t=Wr(e.expression);for(const e of t)if(!s[p].group||!s[p].group.map||!s[p].group.map((e=>qr(e))).includes(qr(e)))throw Error("Use of ungrouped variable in projection of operation (?"+qr(e)+")")}}const e=s[p-1].where.filter((e=>"query"===e.type));if(e.length>0){const t=s[p-3].variables.filter((e=>e.variable&&e.variable.value)).map((e=>e.variable.value)),r=Yr(e.map((e=>e.variables))).map((e=>e.value||e.variable.value));for(const e of t)if(r.indexOf(e)>=0)throw Error("Target id of 'AS' (?"+e+") already used in subquery")}this.$=Ar(s[p-3],Or(s[p-2]),s[p-1],s[p]);break;case 8:this.$=Ar({queryType:"CONSTRUCT",template:s[p-3]},Or(s[p-2]),s[p-1],s[p]);break;case 9:this.$=Ar({queryType:"CONSTRUCT",template:s[p-2]=s[p-2]?s[p-2].triples:[]},Or(s[p-5]),{where:[{type:"bgp",triples:Tr([],s[p-2])}]},s[p]);break;case 10:this.$=Ar({queryType:"DESCRIBE",variables:"*"===s[p-3]?[new nr]:s[p-3]},Or(s[p-2]),s[p-1],s[p]);break;case 11:this.$=Ar({queryType:"ASK"},Or(s[p-2]),s[p-1],s[p]);break;case 12:this.$=Ar(s[p-1],{variables:[new nr]});break;case 13:const t=function(e){const t=e.slice().sort(),r=[];for(let e=0;e<t.length-1;e++)t[e+1]==t[e]&&r.push(t[e]);return r}(s[p].map((e=>e.value||e.variable.value)));if(t.length>0)throw Error("Two or more of the resulting columns have the same name (?"+t[0]+")");this.$=Ar(s[p-1],{variables:s[p]});break;case 14:this.$=Ar({queryType:"SELECT"},s[p]&&(s[p-1]=Dr(s[p]),s[p]={},s[p][s[p-1]]=!0,s[p]));break;case 16:case 27:this.$=Cr(s[p-3],{variable:s[p-1]});break;case 17:case 18:this.$=Ar(s[p-3],s[p-2],s[p-1],s[p],{type:"query"});break;case 19:case 58:this.$={iri:s[p],named:!!s[p-1]};break;case 20:this.$={where:s[p].patterns};break;case 21:this.$=Ar(s[p-1],s[p]);break;case 22:this.$=Ar(s[p-2],s[p-1],s[p]);break;case 23:this.$={group:s[p]};break;case 24:case 25:case 28:case 31:case 33:case 34:this.$=Cr(s[p]);break;case 26:this.$=Cr(s[p-1]);break;case 29:this.$={having:s[p]};break;case 30:this.$={order:s[p]};break;case 32:this.$=Cr(s[p],{descending:!0});break;case 35:this.$={limit:Rr(s[p])};break;case 36:this.$={offset:Rr(s[p])};break;case 37:this.$={limit:Rr(s[p-2]),offset:Rr(s[p])};break;case 38:this.$={limit:Rr(s[p]),offset:Rr(s[p-2])};break;case 39:case 43:this.$={type:"values",values:s[p]};break;case 40:case 84:this.$=s[p-1].map((e=>({[s[p-3]]:e})));break;case 41:case 85:this.$=s[p-1].map((()=>({})));break;case 42:case 86:var h=s[p-4].length;s[p-4]=s[p-4].map(Sr),this.$=s[p-1].map((function(e){if(e.length!==h)throw Error("Inconsistent VALUES length");for(var t={},r=0;r<h;r++)t["?"+s[p-4][r].value]=e[r];return t}));break;case 44:case 65:case 100:case 126:case 175:this.$=s[p-1];break;case 45:this.$={type:"update",updates:gr(s[p-2],s[p-1])};break;case 46:this.$=Ar({type:"load",silent:!!s[p-2],source:s[p-1]},s[p]&&{destination:s[p]});break;case 47:this.$={type:Dr(s[p-2]),silent:!!s[p-1],graph:s[p]};break;case 48:this.$={type:Dr(s[p-4]),silent:!!s[p-3],source:s[p-2],destination:s[p]};break;case 49:this.$={type:"create",silent:!!s[p-2],graph:{type:"graph",name:s[p]}};break;case 50:this.$={updateType:"insert",insert:ea(s[p])};break;case 51:this.$={updateType:"delete",delete:ta(ea(s[p]))};break;case 52:this.$={updateType:"deletewhere",delete:ta(s[p])};break;case 53:this.$={updateType:"insertdelete",...s[p-4],...s[p-3],...Or(s[p-2],"using"),where:s[p].patterns};break;case 54:case 57:case 62:case 167:case 191:case 236:this.$=s[p];break;case 55:this.$={delete:ta(s[p-1]),insert:s[p]||[]};break;case 56:this.$={delete:[],insert:s[p]};break;case 59:this.$={graph:s[p]};break;case 60:this.$={type:"graph",default:!0};break;case 61:case 63:this.$={type:"graph",name:s[p]};break;case 64:this.$={[Dr(s[p])]:!0};break;case 66:this.$=s[p-1]?Nr(s[p],[s[p-1]]):Nr(s[p]);break;case 67:var f=Ar(s[p-3]||{triples:[]},{type:"graph",name:s[p-5]});this.$=s[p]?[f,s[p]]:[f];break;case 68:case 73:this.$={type:"bgp",triples:Nr(s[p-2],[s[p-1]])};break;case 69:this.$={type:"group",patterns:[s[p-1]]};break;case 70:for(const e of s[p-1].filter((e=>"bind"===e.type))){const t=s[p-1].indexOf(e),r=new Set;for(const e of s[p-1].slice(0,t))"group"!==e.type&&"bgp"!==e.type||Xr(e).forEach((e=>r.add(e)));if(r.has(e.variable.value))throw Error("Variable used to bind is already bound (?"+e.variable.value+")")}this.$={type:"group",patterns:s[p-1]};break;case 71:this.$=s[p-1]?Nr([s[p-1]],s[p]):Nr(s[p]);break;case 72:this.$=s[p]?[s[p-2],s[p]]:s[p-2];break;case 75:this.$=Ar(s[p],{type:"optional"});break;case 76:this.$=Ar(s[p],{type:"minus"});break;case 77:this.$=Ar(s[p],{type:"graph",name:s[p-1]});break;case 78:this.$=Ar(s[p],{type:"service",name:s[p-1],silent:!!s[p-2]});break;case 79:this.$={type:"filter",expression:s[p]};break;case 80:this.$={type:"bind",variable:s[p-1],expression:s[p-3]};break;case 89:this.$=Zr(s[p]);break;case 90:this.$=void 0;break;case 91:this.$=s[p-1].length?{type:"union",patterns:Nr(s[p-1].map(Lr),[Lr(s[p])])}:s[p];break;case 95:this.$={...s[p],function:s[p-1]};break;case 96:this.$={type:"functionCall",args:[]};break;case 97:this.$={type:"functionCall",args:gr(s[p-2],s[p-1]),distinct:!!s[p-3]};break;case 98:case 115:case 128:case 247:case 249:case 251:case 253:case 255:case 263:case 267:case 297:case 299:case 303:case 307:case 328:case 341:case 349:case 355:case 361:case 367:case 369:case 373:case 375:case 379:case 381:case 385:case 391:case 395:case 401:case 405:case 409:case 411:case 420:case 428:case 430:case 440:case 444:case 446:case 448:this.$=[];break;case 99:this.$=gr(s[p-2],s[p-1]);break;case 101:this.$=Nr(s[p-2],[s[p-1]]);break;case 102:case 112:this.$=Jr(s[p].map((e=>Ar(xr(s[p-1]),e))));break;case 103:this.$=Jr(Tr(s[p].map((e=>Ar(xr(s[p-1].entity),e))),s[p-1].triples));break;case 105:this.$=Nr([s[p-1]],s[p]);break;case 106:this.$=Nr(s[p]);break;case 107:this.$=Qr(s[p-1],s[p]);break;case 109:case 237:this.$=aa.factory.namedNode(or);break;case 110:case 118:this.$=gr(s[p-1],s[p]);break;case 111:this.$=s[p]?{annotation:s[p],object:s[p-1]}:s[p-1];break;case 113:this.$=s[p]?Jr(Tr(s[p].map((e=>Ar(xr(s[p-1].entity),e))),s[p-1].triples)):s[p-1].triples;break;case 114:this.$=Qr(...s[p-1],s[p]);break;case 116:this.$=Qr(...s[p]);break;case 117:case 159:case 163:this.$=[s[p-1],s[p]];break;case 119:this.$=s[p]?{object:s[p-1],annotation:s[p]}:s[p-1];break;case 120:this.$=s[p-1].length?kr("|",gr(s[p-1],s[p])):s[p];break;case 121:this.$=s[p-1].length?kr("/",gr(s[p-1],s[p])):s[p];break;case 122:this.$=s[p]?kr(s[p],[s[p-1]]):s[p-1];break;case 123:this.$=s[p-1]?kr(s[p-1],[s[p]]):s[p];break;case 125:case 131:this.$=kr(s[p-1],[s[p]]);break;case 129:this.$=kr("|",gr(s[p-2],s[p-1]));break;case 132:case 134:this.$=function(e){var t=$r(),r=t,a=[],i=[];e.forEach((function(e){a.push(e.entity),Tr(i,e.triples)}));for(var s=0,n=0,u=a.length,o=Array(2*u);s<u;)o[n++]=xr(r,aa.factory.namedNode(cr),a[s]),o[n++]=xr(r,aa.factory.namedNode(lr),r=++s<u?$r():aa.factory.namedNode(pr));return{entity:t,triples:Tr(o,i)}}(s[p-1]);break;case 133:case 135:this.$=(c=s[p-1],{entity:l=$r(),triples:c.map((function(e){return Ar(xr(l),e)}))});break;case 140:this.$={entity:s[p],triples:[]};break;case 145:this.$=Sr(s[p]);break;case 149:this.$=aa.factory.namedNode(pr);break;case 151:case 153:case 158:case 162:this.$=vr(s[p-1],s[p]);break;case 152:this.$=["||",s[p]];break;case 154:this.$=["&&",s[p]];break;case 156:this.$=Ir(s[p-1],[s[p-2],s[p]]);break;case 157:this.$=Ir(s[p-2]?"notin":"in",[s[p-3],s[p]]);break;case 160:this.$=["+",vr(s[p-1],s[p])];break;case 161:var y=wr(s[p-1].value.replace("-",""),s[p-1].datatype);this.$=["-",vr(y,s[p])];break;case 164:this.$=Ir("UPLUS",[s[p]]);break;case 165:this.$=Ir(s[p-1],[s[p]]);break;case 166:this.$=Ir("UMINUS",[s[p]]);break;case 177:this.$=Ir(Dr(s[p-1]));break;case 178:this.$=Ir(Dr(s[p-3]),[s[p-1]]);break;case 179:this.$=Zr(Ir(Dr(s[p-3]),[s[p-1]]));break;case 180:this.$=Ir(Dr(s[p-5]),[s[p-3],s[p-1]]);break;case 181:this.$=Ir(Dr(s[p-7]),[s[p-5],s[p-3],s[p-1]]);break;case 182:this.$=Zr(Ir(Dr(s[p-7]),[s[p-5],s[p-3],s[p-1]]));break;case 183:this.$=Ir(Dr(s[p-1]),s[p]);break;case 184:this.$=Ir("bound",[Sr(s[p-1])]);break;case 185:this.$=Ir(s[p-1],[]);break;case 186:this.$=Ir(s[p-3],[s[p-1]]);break;case 187:this.$=Ir(s[p-2]?"notexists":"exists",[Lr(s[p])]);break;case 188:case 189:this.$=Cr(s[p-1],{type:"aggregate",aggregation:Dr(s[p-4]),distinct:!!s[p-2]});break;case 190:this.$=Cr(s[p-2],{type:"aggregate",aggregation:Dr(s[p-5]),distinct:!!s[p-3],separator:"string"==typeof s[p-1]?s[p-1]:" "});break;case 192:this.$=wr(s[p]);break;case 193:this.$=(u=s[p-1],o=Dr(s[p].substr(1)),aa.factory.literal(u,o));break;case 194:this.$=wr(s[p-2],s[p]);break;case 195:case 204:this.$=wr(s[p],fr);break;case 196:case 205:this.$=wr(s[p],yr);break;case 197:case 206:this.$=wr(Dr(s[p]),Fr);break;case 200:this.$=wr(s[p].toLowerCase(),dr);break;case 201:this.$=wr(s[p].substr(1),fr);break;case 202:this.$=wr(s[p].substr(1),yr);break;case 203:this.$=wr(s[p].substr(1).toLowerCase(),Fr);break;case 207:case 208:this.$=Mr(s[p],1);break;case 209:case 210:this.$=Mr(s[p],3);break;case 211:this.$=aa.factory.namedNode(mr(s[p]));break;case 213:var F=s[p].indexOf(":"),d=s[p].substr(0,F),E=aa.prefixes[d];if(!E)throw new Error("Unknown prefix: "+d);var b=mr(E+s[p].substr(F+1));this.$=aa.factory.namedNode(b);break;case 214:if(s[p]=s[p].substr(0,s[p].length-1),!(s[p]in aa.prefixes))throw new Error("Unknown prefix: "+s[p]);b=mr(aa.prefixes[s[p]]);this.$=aa.factory.namedNode(b);break;case 215:this.$=$r(s[p].replace(/^(_:)/,""));break;case 216:this.$=$r();break;case 217:case 218:case 232:this.$=Zr(Pr(s[p-3],s[p-2],s[p-1]));break;case 230:case 231:this.$=Zr(s[p-1]);break;case 248:case 250:case 252:case 254:case 256:case 260:case 264:case 268:case 270:case 292:case 294:case 296:case 298:case 300:case 302:case 304:case 306:case 329:case 342:case 356:case 368:case 370:case 372:case 374:case 392:case 402:case 425:case 427:case 429:case 431:case 441:case 445:case 447:case 449:s[p-1].push(s[p]);break;case 259:case 269:case 291:case 293:case 295:case 301:case 305:case 371:case 424:case 426:this.$=[s[p]];break;case 308:s[p-3].push(s[p-2]);break;case 350:case 362:case 376:case 380:case 382:case 386:case 396:case 406:case 410:case 412:case 421:s[p-2].push(s[p-1])}},table:[t(r,a,{3:1,4:2,10:3}),{1:[3]},t(i,[2,307],{5:4,7:5,321:6,214:7,8:8,96:9,215:10,17:11,21:12,97:16,38:17,6:[2,238],13:s,16:s,45:s,197:s,224:s,229:s,308:s,24:[1,13],32:[1,14],36:[1,15],41:n}),t([6,13,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],[2,3],{322:19,11:20,14:21,12:[1,22],15:[1,23]}),{6:[1,24]},{6:[2,240]},{6:[2,241]},{6:[2,242]},{6:[2,243],9:25,84:26,85:u},{6:[2,239]},t(o,[2,411],{216:28,217:29}),t(c,[2,249],{18:30}),t(c,[2,251],{22:31}),t(l,[2,255],{25:32,27:33,29:[1,34]}),{13:p,16:h,33:35,39:[1,37],44:39,55:40,87:f,139:38,307:43,308:y,323:36},t(c,[2,267],{37:46}),t(F,[2,326],{98:47,103:49,106:50,117:55,130:61,100:[1,48],110:[1,51],113:[1,52],115:[1,53],116:[1,54],131:[1,62],329:[1,56],330:[1,57],331:[1,58],332:[1,59],333:[1,60]}),{39:[1,63],40:64,43:65,44:66,45:d,87:f},t(E,[2,273],{42:68,324:69,325:[1,70],326:[1,71]}),t(r,[2,248]),t(r,[2,245]),t(r,[2,246]),{13:[1,72]},{16:[1,73]},{1:[2,1]},{6:[2,2]},{6:[2,244]},{45:[1,77],85:[1,78],86:74,87:[1,75],89:[1,76]},t([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],[2,120],{337:[1,79]}),t(b,[2,418],{218:80,222:81,229:[1,82]}),{19:83,28:_,29:D,52:84,53:g,56:85},{19:88,28:_,29:D,52:89,53:g,56:85},t(c,[2,253],{26:90}),{28:[1,91],52:92,53:g},t(T,[2,385],{181:93,182:94,183:95,31:[2,383]}),t(A,[2,263],{34:96}),t(A,[2,261],{44:39,55:40,307:43,139:97,13:p,16:h,87:f,308:y}),t(A,[2,262]),t(N,[2,259]),t(m,[2,143]),t(m,[2,144]),t([6,13,16,28,29,31,39,45,47,48,53,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,145]),t(S,[2,211]),t(S,[2,212]),t(S,[2,213]),t(S,[2,214]),{19:98,28:_,29:D,52:99,53:g,56:85},{6:[2,309],99:100,193:[1,101]},t(I,[2,311],{101:102,328:[1,103]}),t(C,[2,317],{104:104,328:[1,105]}),t(k,[2,322],{107:106,328:[1,107]}),{111:108,112:[2,324],328:[1,109]},{29:v,114:110},{29:v,114:112},{29:v,114:113},{118:114,123:[1,115],125:116,126:O},t(R,[2,315]),t(R,[2,316]),t(L,[2,319]),t(L,[2,320]),t(L,[2,321]),t(F,[2,327]),{13:p,16:h,55:118,307:43,308:y},t(c,[2,12]),t(c,[2,13],{44:66,43:119,45:d,87:f}),t(w,[2,269]),t(w,[2,15]),{13:p,16:h,44:136,45:P,46:120,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(E,[2,14]),t(E,[2,274]),t(E,[2,271]),t(E,[2,272]),t(r,[2,4]),{13:[1,177]},t(be,[2,39]),{29:[1,178]},{29:[1,179]},{87:[1,181],91:180},{45:[1,187],87:[1,185],89:[1,186],93:182,165:183,166:184},t(o,[2,410]),t([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337],[2,121],{338:[1,188]}),{13:p,16:h,45:[1,193],55:194,197:_e,219:189,220:190,223:191,224:[1,192],307:43,308:y},t(b,[2,419]),t(De,ge,{20:196,59:197,69:198,70:Te}),t(c,[2,250]),{29:Ae,57:200},t(I,[2,279],{54:202,327:[1,203]}),{29:[2,282]},t(Ne,me,{23:204,58:205,62:206,63:Se}),t(c,[2,252]),{19:208,28:_,29:D,52:209,53:g,56:85},{29:[1,210]},t(l,[2,256]),{31:[1,211]},{31:[2,384]},{13:p,16:h,44:215,45:Ie,55:220,82:x,87:f,89:Ce,145:212,172:221,185:213,187:214,231:ke,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},t(Le,[2,265],{56:85,35:227,52:228,19:229,28:_,29:D,53:g}),t(N,[2,260]),t(Ne,me,{58:205,62:206,23:230,63:Se}),t(c,[2,268]),{6:[2,45]},t(r,a,{10:3,4:231}),{13:p,16:h,55:232,307:43,308:y},t(I,[2,312]),{105:233,112:we,122:234,132:[1,237],134:235,327:[1,238],334:[1,239]},t(C,[2,318]),t(I,Pe,{108:240,133:242,112:xe,132:$e}),t(k,[2,323]),{112:[1,244]},{112:[2,325]},t(Ue,[2,50]),t(T,Ge,{135:245,136:246,143:247,144:248,31:Be,112:Be}),t(Ue,[2,51]),t(Ue,[2,52]),t(je,[2,328],{119:249}),{29:v,114:250},t(je,[2,56]),{29:v,114:251},t(F,[2,59]),t(w,[2,270]),{47:[1,252]},t(Ve,[2,150]),t(Me,[2,428],{240:253}),t(Qe,[2,430],{244:254}),t(Qe,[2,155],{248:255,249:256,250:[2,438],290:[1,257],341:[1,258],342:[1,259],343:[1,260],344:[1,261],345:[1,262],346:[1,263]}),t(qe,[2,440],{252:264}),t(He,[2,448],{260:265}),{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,255:154,257:155,264:266,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,255:154,257:155,264:267,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,255:154,257:155,264:268,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(He,[2,167]),t(He,[2,168]),t(He,[2,169]),t(He,[2,170],{176:269,45:We,89:Ye}),t(He,[2,171]),t(He,[2,172]),t(He,[2,173]),t(He,[2,174]),{13:p,16:h,44:136,45:P,46:272,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(ze,[2,176]),{89:[1,273]},{45:[1,274]},{45:[1,275]},{45:[1,276]},{45:[1,277]},{45:[1,278]},{45:Xe,89:Ze,179:279},{45:[1,282]},{45:[1,284],89:[1,283]},{279:[1,285]},t(Ke,[2,192],{292:[1,286],293:[1,287]}),t(Ke,[2,195]),t(Ke,[2,196]),t(Ke,[2,197]),t(Ke,[2,198]),t(Ke,[2,199]),t(Ke,[2,200]),{13:p,16:h,44:39,55:40,82:x,87:f,139:289,172:291,255:154,257:155,266:290,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,320:288},{45:[1,292]},{45:[1,293]},{45:[1,294]},t(Je,[2,452]),t(Je,[2,453]),t(Je,[2,454]),t(Je,[2,455]),t(Je,[2,456]),{279:[2,458]},t(et,[2,207]),t(et,[2,208]),t(et,[2,209]),t(et,[2,210]),t(Ke,[2,201]),t(Ke,[2,202]),t(Ke,[2,203]),t(Ke,[2,204]),t(Ke,[2,205]),t(Ke,[2,206]),t(r,[2,5]),t(tt,[2,297],{88:295}),t(rt,[2,299],{90:296}),{48:[1,297],87:[1,298]},t(at,[2,301]),t(be,[2,43]),t(be,[2,82]),t(be,[2,83]),{29:[1,299]},{29:[1,300]},{87:[1,302],169:301},t(o,[2,412]),t(it,[2,123]),t(it,[2,416],{221:303,339:304,39:[1,306],263:[1,307],340:[1,305]}),t(st,[2,124]),{13:p,16:h,45:[1,311],55:194,89:[1,310],197:_e,223:312,225:308,226:309,229:nt,307:43,308:y},t(o,s,{215:10,214:314}),t(st,[2,236]),t(st,[2,237]),t(ut,[2,6]),t(ot,[2,287],{60:315,72:316,73:[1,317]}),t(De,[2,286]),{13:p,16:h,45:P,55:323,67:321,68:322,71:318,77:320,79:319,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,307:43,308:y,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t([6,31,63,70,73,81,83,85],[2,20]),t(T,ct,{38:17,49:324,147:325,17:326,21:327,148:328,154:329,155:330,29:lt,31:lt,85:lt,112:lt,159:lt,160:lt,161:lt,163:lt,164:lt,41:n}),{13:p,16:h,55:331,307:43,308:y},t(I,[2,280]),t(ut,[2,7]),t(De,ge,{59:197,69:198,20:332,70:Te}),t(Ne,[2,284]),{64:[1,333]},t(Ne,me,{58:205,62:206,23:334,63:Se}),t(c,[2,254]),t(T,Ge,{144:248,30:335,143:336,31:[2,257]}),t(c,[2,100]),{31:[2,387],184:337,335:[1,338]},{13:p,16:h,44:39,55:40,87:f,139:342,186:339,190:340,195:341,197:pt,307:43,308:y},t(ht,[2,389],{44:39,55:40,307:43,190:340,195:341,139:342,188:344,189:345,186:346,13:p,16:h,87:f,197:pt,308:y}),t(ft,[2,227]),t(ft,[2,228]),t(ft,[2,229]),{13:p,16:h,44:215,45:Ie,55:220,82:x,87:f,89:Ce,172:221,185:351,187:350,200:348,230:347,231:ke,234:349,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},{13:p,16:h,44:39,55:40,87:f,139:342,186:352,190:340,195:341,197:pt,307:43,308:y},t(ft,[2,146]),t(ft,[2,147]),t(ft,[2,148]),t(ft,[2,149]),{13:p,16:h,44:354,55:355,82:x,87:f,172:357,237:356,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:358,312:Re,313:353},t(yt,[2,215]),t(yt,[2,216]),t(Ne,me,{58:205,62:206,23:359,63:Se}),t(A,[2,264]),t(Le,[2,266]),t(ut,[2,11]),t(i,[2,308],{6:[2,310]}),t(Ue,[2,313],{102:360,120:361,121:[1,362]}),t(Ue,[2,47]),t(Ue,[2,63]),t(Ue,[2,64]),{13:p,16:h,55:363,307:43,308:y},t(Ue,[2,336]),t(Ue,[2,337]),t(Ue,[2,338]),{109:[1,364]},t(Ft,[2,60]),{13:p,16:h,55:365,307:43,308:y},t(I,[2,335]),{13:p,16:h,55:366,307:43,308:y},{31:[1,367]},t(dt,[2,341],{137:368}),t(dt,[2,340]),{13:p,16:h,44:215,45:Ie,55:220,82:x,87:f,89:Ce,145:369,172:221,185:213,187:214,231:ke,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},{28:[1,370],127:371,128:[1,372]},t(je,[2,330],{124:373,125:374,126:O}),t(je,[2,57]),{44:375,87:f},t(Ve,[2,151],{241:376,242:[1,377]}),t(Me,[2,153],{245:378,246:[1,379]}),{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,247:380,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{250:[1,381]},t(Et,[2,432]),t(Et,[2,433]),t(Et,[2,434]),t(Et,[2,435]),t(Et,[2,436]),t(Et,[2,437]),{250:[2,439]},t([47,48,193,242,246,250,272,290,341,342,343,344,345,346],[2,158],{253:382,254:383,255:384,257:385,263:[1,386],265:[1,387],297:te,298:re,299:ae,300:ie,301:se,302:ne}),t(qe,[2,162],{261:388,262:389,39:bt,338:_t}),t(He,[2,164]),t(He,[2,165]),t(He,[2,166]),t(ze,[2,95]),t(ze,[2,96]),t(Et,[2,377],{177:392,325:[1,393]}),{48:[1,394]},t(ze,[2,177]),{13:p,16:h,44:136,45:P,46:395,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,46:396,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,46:397,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,46:398,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,46:399,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(ze,[2,183]),t(ze,[2,98]),t(Et,[2,381],{180:400}),{87:[1,401]},t(ze,[2,185]),{13:p,16:h,44:136,45:P,46:402,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{29:Ae,57:403},t(Ke,[2,193]),{13:p,16:h,55:404,307:43,308:y},{13:p,16:h,44:39,55:40,87:f,139:342,195:405,197:pt,307:43,308:y},t(Dt,[2,233]),t(Dt,[2,234]),t(Dt,[2,235]),t(gt,[2,459],{281:406,325:[1,407]}),t(Et,[2,463],{284:408,325:[1,409]}),t(Et,[2,465],{286:410,325:[1,411]}),{13:p,16:h,31:[1,412],55:414,82:x,171:413,172:415,173:416,174:Tt,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:At},{31:[1,419],89:[1,420]},{29:[1,421]},t(at,[2,302]),t(tt,[2,367],{167:422}),t(rt,[2,369],{168:423}),{48:[1,424],87:[1,425]},t(at,[2,371]),t(it,[2,122]),t(it,[2,417]),t(it,[2,413]),t(it,[2,414]),t(it,[2,415]),t(st,[2,125]),t(st,[2,127]),t(st,[2,128]),t(Nt,[2,420],{227:426}),t(st,[2,130]),{13:p,16:h,55:194,197:_e,223:427,307:43,308:y},{48:[1,428]},t(mt,[2,289],{61:429,80:430,81:[1,431],83:[1,432]}),t(ot,[2,288]),{64:[1,433]},t(De,[2,29],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:434,13:p,16:h,45:P,268:B,269:j,270:V,271:M,273:Q,274:q,276:H,277:W,279:Y,280:z,283:X,285:Z,308:y,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee}),t(St,[2,293]),t(It,[2,92]),t(It,[2,93]),t(It,[2,94]),{45:We,89:Ye,176:269},{31:[1,435]},{31:[1,436]},{19:437,28:_,29:D,56:85},{19:438,28:_,29:D,56:85},t(Ct,[2,355],{149:439}),t(Ct,[2,354]),{13:p,16:h,44:215,45:kt,55:220,82:x,87:f,89:Ce,156:440,172:221,185:441,203:442,231:vt,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},t(A,[2,19]),t(mt,[2,21]),{13:p,16:h,44:450,45:Ot,55:323,65:445,66:446,67:447,68:448,87:f,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,307:43,308:y,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(ut,[2,8]),{31:[1,451]},{31:[2,258]},{31:[2,101]},t(T,[2,386],{31:[2,388]}),t(ht,[2,102]),t(Rt,[2,391],{191:452}),t(T,[2,395],{196:453,198:454}),t(T,[2,108]),t(T,[2,109]),t(ht,[2,103]),t(ht,[2,104]),t(ht,[2,390]),{13:p,16:h,44:215,45:Ie,48:[1,455],55:220,82:x,87:f,89:Ce,172:221,185:351,187:350,200:456,231:ke,234:349,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},t(Lt,[2,424]),t(wt,[2,136]),t(wt,[2,137]),t(Pt,[2,140]),{232:[1,457]},{13:p,16:h,44:39,55:40,87:f,139:342,195:458,197:pt,307:43,308:y},t(Dt,[2,219]),t(Dt,[2,220]),t(Dt,[2,221]),t(Dt,[2,222]),t(Dt,[2,223]),t(ut,[2,10]),t(Ue,[2,46]),t(Ue,[2,314]),{112:we,122:459},t(Ue,[2,62]),t(I,Pe,{133:242,108:460,112:xe,132:$e}),t(Ft,[2,61]),t(Ue,[2,49]),t([6,28,126,128,193],[2,65]),{31:[2,66],112:[1,462],138:461},t(dt,[2,351],{146:463,335:[1,464]}),{29:Ae,57:465},t(je,[2,329]),t(I,[2,332],{129:466,327:[1,467]}),t(je,[2,55]),t(je,[2,331]),{48:[1,468]},t(Me,[2,429]),{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,239:469,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(Qe,[2,431]),{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,243:470,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(Qe,[2,156]),{45:Xe,89:Ze,179:471},t(qe,[2,441]),{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,251:472,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(He,[2,444],{256:473}),t(He,[2,446],{258:474}),t(Et,[2,442]),t(Et,[2,443]),t(He,[2,449]),{13:p,16:h,44:136,45:P,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,255:154,257:155,259:475,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(Et,[2,450]),t(Et,[2,451]),t(Et,[2,379],{178:476}),t(Et,[2,378]),t([6,13,16,29,31,39,45,47,48,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,175]),{48:[1,477]},{48:[1,478]},{272:[1,479]},{272:[1,480]},{272:[1,481]},{13:p,16:h,44:136,45:P,46:482,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{48:[1,483]},{48:[1,484]},t(ze,[2,187]),t(Ke,[2,194]),{13:p,16:h,44:39,55:40,82:x,87:f,139:289,172:291,255:154,257:155,266:290,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,320:485},{13:p,16:h,39:[1,487],44:136,45:P,46:488,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,282:486,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(gt,[2,460]),{13:p,16:h,44:136,45:P,46:489,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(Et,[2,464]),{13:p,16:h,44:136,45:P,46:490,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(Et,[2,466]),t(be,[2,40]),t(tt,[2,298]),t(xt,[2,87]),t(xt,[2,88]),t(xt,[2,89]),t(xt,[2,90]),{13:p,16:h,55:492,82:x,172:493,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,311:494,312:Re,315:491},t(be,[2,41]),t(rt,[2,300]),t($t,[2,303],{92:495}),{13:p,16:h,31:[1,496],55:414,82:x,171:497,172:415,173:416,174:Tt,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:At},{31:[1,498],89:[1,499]},{29:[1,500]},t(at,[2,372]),{13:p,16:h,48:[2,422],55:194,197:_e,223:312,226:502,228:501,229:nt,307:43,308:y},t(st,[2,131]),t(st,[2,126]),t(mt,[2,22]),t(mt,[2,290]),{82:[1,503]},{82:[1,504]},{13:p,16:h,44:510,45:P,55:323,67:321,68:322,74:505,75:506,76:Ut,77:320,78:Gt,79:509,87:f,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,307:43,308:y,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(St,[2,294]),t(Bt,[2,69]),t(Bt,[2,70]),t(De,ge,{59:197,69:198,20:511,70:Te}),t(Ne,me,{58:205,62:206,23:512,63:Se}),{29:[2,375],31:[2,71],84:522,85:u,112:[1,518],150:513,151:514,158:515,159:[1,516],160:[1,517],161:[1,519],163:[1,520],164:[1,521],175:523},t(Ct,[2,363],{157:524,335:[1,525]}),t(o,s,{215:10,202:526,205:527,208:528,214:529,44:530,87:f}),t(jt,[2,399],{215:10,205:527,208:528,214:529,44:530,204:531,202:532,13:s,16:s,45:s,197:s,224:s,229:s,308:s,87:f}),{13:p,16:h,44:215,45:kt,55:220,82:x,87:f,89:Ce,172:221,185:351,203:536,212:534,231:vt,233:533,234:535,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},t(o,s,{215:10,205:527,208:528,214:529,44:530,202:537,87:f}),t(Ne,[2,23],{307:43,267:139,275:146,278:149,55:323,67:447,68:448,44:450,66:538,13:p,16:h,45:Ot,87:f,268:B,269:j,270:V,271:M,273:Q,274:q,276:H,277:W,279:Y,280:z,283:X,285:Z,308:y,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee}),t(Vt,[2,291]),t(Vt,[2,24]),t(Vt,[2,25]),{13:p,16:h,44:136,45:P,46:539,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(Vt,[2,28]),t(Ne,me,{58:205,62:206,23:540,63:Se}),t([31,112,232,318,335],[2,105],{192:541,193:[1,542]}),t(Rt,[2,107]),{13:p,16:h,44:215,45:Ie,55:220,82:x,87:f,89:Ce,172:221,185:351,187:350,199:543,200:544,231:ke,234:349,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},t(Mt,[2,132]),t(Lt,[2,425]),t(Mt,[2,133]),{13:p,16:h,44:354,55:355,82:x,87:f,172:357,237:356,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:358,312:Re,313:545},t(Ue,[2,54]),t(Ue,[2,48]),t(dt,[2,342]),{13:p,16:h,44:39,55:40,87:f,139:546,307:43,308:y},t(dt,[2,68]),t(T,[2,350],{31:Qt,112:Qt}),t(Ue,[2,53]),{13:p,16:h,55:547,307:43,308:y},t(I,[2,333]),t(w,[2,16]),t(Me,[2,152]),t(Qe,[2,154]),t(Qe,[2,157]),t(qe,[2,159]),t(qe,[2,160],{262:389,261:548,39:bt,338:_t}),t(qe,[2,161],{262:389,261:549,39:bt,338:_t}),t(He,[2,163]),{13:p,16:h,44:136,45:P,46:550,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(ze,[2,178]),t(ze,[2,179]),{13:p,16:h,44:136,45:P,46:551,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,46:552,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,46:553,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{48:[1,554],272:[1,555]},t(ze,[2,184]),t(ze,[2,186]),{314:[1,556]},{48:[1,557]},{48:[2,461]},{48:[2,462]},{48:[1,558]},{48:[2,467],193:[1,561],287:559,288:560},{13:p,16:h,55:194,197:_e,223:562,307:43,308:y},t(qt,[2,224]),t(qt,[2,225]),t(qt,[2,226]),{31:[1,563],45:Ht,94:564},t(be,[2,84]),t(tt,[2,368]),t(be,[2,85]),t(rt,[2,370]),t($t,[2,373],{170:566}),{48:[1,567]},{48:[2,423],337:[1,568]},t(mt,[2,35],{83:[1,569]}),t(mt,[2,36],{81:[1,570]}),t(ot,[2,30],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:509,44:510,75:571,13:p,16:h,45:P,76:Ut,78:Gt,87:f,268:B,269:j,270:V,271:M,273:Q,274:q,276:H,277:W,279:Y,280:z,283:X,285:Z,308:y,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee}),t(Wt,[2,295]),{45:P,77:572},{45:P,77:573},t(Wt,[2,33]),t(Wt,[2,34]),{31:[2,275],50:574,84:575,85:u},{31:[2,277],51:576,84:577,85:u},t(Ct,[2,356]),t(Yt,[2,357],{152:578,335:[1,579]}),t(zt,[2,74]),{29:Ae,57:580},{29:Ae,57:581},{13:p,16:h,44:39,55:40,87:f,139:582,307:43,308:y},t(Xt,[2,365],{162:583,328:[1,584]}),{13:p,16:h,45:P,55:323,67:321,68:322,77:320,79:585,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,307:43,308:y,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{45:[1,586]},t(zt,[2,81]),{29:Ae,57:587},t(Ct,[2,73]),t(T,[2,362],{29:Zt,31:Zt,85:Zt,112:Zt,159:Zt,160:Zt,161:Zt,163:Zt,164:Zt}),t(jt,[2,112]),t(Kt,[2,401],{206:588}),t(T,[2,405],{209:589,210:590}),t(T,[2,403]),t(T,[2,404]),t(jt,[2,113]),t(jt,[2,400]),{13:p,16:h,44:215,45:kt,48:[1,591],55:220,82:x,87:f,89:Ce,172:221,185:351,203:536,212:592,231:vt,234:535,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},t(Lt,[2,426]),t(Pt,[2,138]),t(Pt,[2,139]),{232:[1,593]},t(Vt,[2,292]),{47:[1,595],48:[1,594]},t(ut,[2,9]),t(Rt,[2,392]),t(Rt,[2,393],{44:39,55:40,307:43,195:341,139:342,194:596,190:597,13:p,16:h,87:f,197:pt,308:y}),t(Rt,[2,110],{272:[1,598]}),t(Jt,[2,397],{201:599,316:600,317:[1,601]}),{314:[1,602]},{29:[1,603]},t(je,[2,58]),t(He,[2,445]),t(He,[2,447]),{48:[1,604],272:[1,605]},{48:[1,606]},{272:[1,607]},{272:[1,608]},t(ze,[2,99]),t(Et,[2,382]),t([13,16,39,47,48,87,193,197,242,246,250,263,265,272,290,297,298,299,300,301,302,308,314,338,341,342,343,344,345,346],[2,232]),t(ze,[2,188]),t(ze,[2,189]),{48:[1,609]},{48:[2,468]},{289:[1,610]},{13:p,16:h,55:492,82:x,172:493,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,311:494,312:Re,315:611},t(be,[2,42]),t($t,[2,304]),{13:p,16:h,55:414,82:x,95:612,171:613,172:415,173:416,174:Tt,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:At},{31:[1,614],45:Ht,94:615},t(st,[2,129]),t(Nt,[2,421]),{82:[1,616]},{82:[1,617]},t(Wt,[2,296]),t(Wt,[2,31]),t(Wt,[2,32]),{31:[2,17]},{31:[2,276]},{31:[2,18]},{31:[2,278]},t(T,ct,{155:330,153:618,154:619,29:er,31:er,85:er,112:er,159:er,160:er,161:er,163:er,164:er}),t(Yt,[2,358]),t(zt,[2,75]),t(zt,[2,76]),{29:Ae,57:620},{13:p,16:h,44:39,55:40,87:f,139:621,307:43,308:y},t(Xt,[2,366]),t(zt,[2,79]),{13:p,16:h,44:136,45:P,46:622,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(zt,[2,91],{336:[1,623]}),t([29,31,85,112,159,160,161,163,164,232,318,335],[2,114],{207:624,193:[1,625]}),t(Kt,[2,117]),{13:p,16:h,44:215,45:kt,55:220,82:x,87:f,89:Ce,172:221,185:351,203:536,211:626,212:627,231:vt,234:535,236:216,237:222,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,309:ve,310:Oe,311:217,312:Re},t(ft,[2,134]),t(Lt,[2,427]),t(ft,[2,135]),t(Vt,[2,26]),{44:628,87:f},t(Rt,[2,106]),t(Rt,[2,394]),t(T,[2,396]),t(Jt,[2,111]),t(Jt,[2,398]),{13:p,16:h,44:39,55:40,87:f,139:342,186:629,190:340,195:341,197:pt,307:43,308:y},t(yt,[2,217]),t(T,Ge,{144:248,140:630,143:631,31:[2,343]}),t(ze,[2,97]),t(Et,[2,380]),t(ze,[2,180]),{13:p,16:h,44:136,45:P,46:632,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},{13:p,16:h,44:136,45:P,46:633,55:133,67:132,68:134,77:131,82:x,87:f,172:135,224:$,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:U,264:130,265:G,266:137,267:139,268:B,269:j,270:V,271:M,273:Q,274:q,275:146,276:H,277:W,278:149,279:Y,280:z,283:X,285:Z,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:pe,346:he,347:fe,348:ye,349:Fe,350:de,351:Ee},t(ze,[2,190]),{290:[1,634]},{314:[1,635]},{13:p,16:h,48:[1,636],55:414,82:x,171:637,172:415,173:416,174:Tt,255:154,257:155,291:150,294:K,295:J,296:ee,297:te,298:re,299:ae,300:ie,301:se,302:ne,303:ue,304:oe,305:ce,306:le,307:43,308:y,312:At},t(tr,[2,305]),t(be,[2,86]),t($t,[2,374]),t(mt,[2,37]),t(mt,[2,38]),t(Ct,[2,72]),t(Ct,[2,360]),t(zt,[2,77]),{29:Ae,57:638},{47:[1,639]},{29:[2,376]},t(Kt,[2,402]),t(Kt,[2,115],{215:10,208:528,214:529,44:530,205:640,13:s,16:s,45:s,197:s,224:s,229:s,308:s,87:f}),t(Kt,[2,118],{272:[1,641]}),t(rr,[2,407],{213:642,319:643,317:[1,644]}),{48:[1,645]},{318:[1,646]},{31:[1,647]},{31:[2,344]},{48:[1,648]},{48:[1,649]},{291:650,303:ue,304:oe,305:ce,306:le},t(xt,[2,218]),t($t,[2,44]),t(tr,[2,306]),t(zt,[2,78]),{44:651,87:f},t(Kt,[2,116]),t(T,[2,406]),t(rr,[2,119]),t(rr,[2,408]),t(o,s,{215:10,205:527,208:528,214:529,44:530,202:652,87:f}),t(Vt,[2,27]),t(Jt,[2,230]),t(ar,[2,345],{141:653,335:[1,654]}),t(ze,[2,181]),t(ze,[2,182]),{48:[2,191]},{48:[1,655]},{318:[1,656]},t(T,Ge,{144:248,142:657,143:658,31:ir,112:ir}),t(ar,[2,346]),t(zt,[2,80]),t(rr,[2,231]),t(dt,[2,67]),t(dt,[2,348])],defaultActions:{5:[2,240],6:[2,241],7:[2,242],9:[2,239],24:[2,1],25:[2,2],26:[2,244],87:[2,282],94:[2,384],100:[2,45],109:[2,325],166:[2,458],263:[2,439],336:[2,258],337:[2,101],487:[2,461],488:[2,462],560:[2,468],574:[2,17],575:[2,276],576:[2,18],577:[2,278],623:[2,376],631:[2,344],650:[2,191]},parseError:function(e,t){if(!t.recoverable){var r=new Error(e);throw r.hash=t,r}this.trace(e)},parse:function(e){var t=this,r=[0],a=[null],i=[],s=this.table,n="",u=0,o=0,c=0,l=i.slice.call(arguments,1),p=Object.create(this.lexer),h={yy:{}};for(var f in this.yy)Object.prototype.hasOwnProperty.call(this.yy,f)&&(h.yy[f]=this.yy[f]);p.setInput(e,h.yy),h.yy.lexer=p,h.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var y=p.yylloc;i.push(y);var F=p.options&&p.options.ranges;"function"==typeof h.yy.parseError?this.parseError=h.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var d,E,b,_,D,g,T,A,N,m=function(){var e;return"number"!=typeof(e=p.lex()||1)&&(e=t.symbols_[e]||e),e},S={};;){if(b=r[r.length-1],this.defaultActions[b]?_=this.defaultActions[b]:(null==d&&(d=m()),_=s[b]&&s[b][d]),void 0===_||!_.length||!_[0]){var I="";for(g in N=[],s[b])this.terminals_[g]&&g>2&&N.push("'"+this.terminals_[g]+"'");I=p.showPosition?"Parse error on line "+(u+1)+":\n"+p.showPosition()+"\nExpecting "+N.join(", ")+", got '"+(this.terminals_[d]||d)+"'":"Parse error on line "+(u+1)+": Unexpected "+(1==d?"end of input":"'"+(this.terminals_[d]||d)+"'"),this.parseError(I,{text:p.match,token:this.terminals_[d]||d,line:p.yylineno,loc:y,expected:N})}if(_[0]instanceof Array&&_.length>1)throw new Error("Parse Error: multiple actions possible at state: "+b+", token: "+d);switch(_[0]){case 1:r.push(d),a.push(p.yytext),i.push(p.yylloc),r.push(_[1]),d=null,E?(d=E,E=null):(o=p.yyleng,n=p.yytext,u=p.yylineno,y=p.yylloc,c>0&&c--);break;case 2:if(T=this.productions_[_[1]][1],S.$=a[a.length-T],S._$={first_line:i[i.length-(T||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(T||1)].first_column,last_column:i[i.length-1].last_column},F&&(S._$.range=[i[i.length-(T||1)].range[0],i[i.length-1].range[1]]),void 0!==(D=this.performAction.apply(S,[n,o,u,h.yy,_[1],a,i].concat(l))))return D;T&&(r=r.slice(0,-1*T*2),a=a.slice(0,-1*T),i=i.slice(0,-1*T)),r.push(this.productions_[_[1]][0]),a.push(S.$),i.push(S._$),A=s[r[r.length-2]][r[r.length-1]],r.push(A);break;case 3:return!0}}return!0}},nr=e("./Wildcard").Wildcard,ur="http://www.w3.org/1999/02/22-rdf-syntax-ns#",or=ur+"type",cr=ur+"first",lr=ur+"rest",pr=ur+"nil",hr="http://www.w3.org/2001/XMLSchema#",fr=hr+"integer",yr=hr+"decimal",Fr=hr+"double",dr=hr+"boolean",Er="",br="",_r="";function Dr(e){return e.toLowerCase()}function gr(e,t){return e.push(t),e}function Tr(e,t){return e.push.apply(e,t),e}function Ar(e){e||(e={});for(var t,r=1,a=arguments.length;r<a&&(t=arguments[r]||{});r++)for(var i in t)e[i]=t[i];return e}function Nr(){for(var e=[],t=0,r=arguments.length;t<r;t++)e=e.concat.apply(e,arguments[t]);return e}function mr(e){if("<"===e[0]&&(e=e.substring(1,e.length-1)),/^[a-z]+:/i.test(e))return e;if(!aa.base)throw new Error("Cannot resolve relative IRI "+e+" because no base IRI was set.");switch(Er!==aa.base&&(Er=aa.base,br=Er.replace(/[^\/:]*$/,""),_r=Er.match(/^(?:[a-z]+:\/*)?[^\/]*/)[0]),e[0]){case void 0:return Er;case"#":return Er+e;case"?":return Er.replace(/(?:\?.*)?$/,e);case"/":return _r+e;default:return br+e}}function Sr(e){if(e){var t=e[0];if("?"===t||"$"===t)return aa.factory.variable(e.substr(1))}return e}function Ir(e,t){return{type:"operation",operator:e,args:t||[]}}function Cr(e,t){var r={expression:"*"===e?new nr:e};if(t)for(var a in t)r[a]=t[a];return r}function kr(e,t){return{type:"path",pathType:e,items:t}}function vr(e,t){for(var r,a=0,i=t.length;a<i&&(r=t[a]);a++)e=Ir(r[0],[e,r[1]]);return e}function Or(e,t){var r,a=[],i=[],s=e.length,n={};if(!s)return null;for(var u=0;u<s&&(r=e[u]);u++)(r.named?i:a).push(r.iri);return n[t||"from"]={default:a,named:i},n}function Rr(e){return parseInt(e,10)}function Lr(e){return"group"===e.type&&1===e.patterns.length?e.patterns[0]:e}function wr(e,t){return t&&"NamedNode"!==t.termType&&(t=aa.factory.namedNode(t)),aa.factory.literal(e,t)}function Pr(e,t,r){if(!("termType"in t))throw new Error("Nested triples cannot contain paths");return aa.factory.quad(e,t,r)}function xr(e,t,r,a){var i={};return null!=e&&(i.subject=e),null!=t&&(i.predicate=t),null!=r&&(i.object=r),null!=a&&(i.annotations=a),i}function $r(e){return"string"==typeof e?e.startsWith("e_")?aa.factory.blankNode(e):aa.factory.blankNode("e_"+e):aa.factory.blankNode("g_"+Ur++)}var Ur=0;aa._resetBlanks=function(){Ur=0};var Gr=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g,Br={"\\":"\\","'":"'",'"':'"',t:"\t",b:"\b",n:"\n",r:"\r",f:"\f"},jr=/[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/,Vr=String.fromCharCode;function Mr(e,t){e=e.substring(t,e.length-t);try{e=e.replace(Gr,(function(e,t,r,a){var i;if(t){if(i=parseInt(t,16),isNaN(i))throw new Error;return Vr(i)}if(r){if(i=parseInt(r,16),isNaN(i))throw new Error;return i<65535?Vr(i):Vr(55296+((i-=65536)>>10),56320+(1023&i))}var s=Br[a];if(!s)throw new Error;return s}))}catch(e){return""}if(jr.exec(e))throw new Error("Invalid unicode codepoint of surrogate pair without corresponding codepoint in "+e);return e}function Qr(e,t,r){var a=[],i=[];return t.forEach((function(t){let r=null;t.annotation&&(r=t.annotation,t=t.object),a.push(xr(null,e,t.entity,r)),Tr(i,t.triples)})),Nr(a,r||[],i)}function qr(e){return e.variable?e.variable.value:e.value||e.expression.value}function Hr(e){if(!e)return[];if("aggregate"===e.type)return[e];if("operation"===e.type){const t=[];for(const r of e.args)t.push(...Hr(r));return t}return[]}function Wr(e){const t=new Set,r=function(e){e&&("Variable"===e.termType?t.add(e):"operation"===e.type&&e.args.forEach(r))};return r(e),t}function Yr(e,t=1,r=[]){for(const a of e)t>0&&a instanceof Array?Yr(a,t-1,r):r.push(a);return r}function zr(e){return"Variable"===e.termType}function Xr(e){if(e.triples){const t=[];for(const r of e.triples)zr(r.subject)&&t.push(r.subject.value),zr(r.predicate)&&t.push(r.predicate.value),zr(r.object)&&t.push(r.object.value);return t}if(e.patterns){const t=[];for(const r of e.patterns)t.push(...Xr(r));return t}return[]}function Zr(e){if(!aa.sparqlStar)throw new Error("SPARQL-star support is not enabled");return e}function Kr(e,t,r){for(const a of t){const t=xr("subject"in a?a.subject:e,a.predicate,a.object);r.push(t),a.annotations&&Kr(Pr(e,a.predicate,a.object),a.annotations,r)}}function Jr(e){if(aa.sparqlStar){const t=[];return e.forEach((e=>{const r=xr(e.subject,e.predicate,e.object);t.push(r),e.annotations&&Kr(Pr(e.subject,e.predicate,e.object),e.annotations,t)})),t}return e}function ea(e){for(const t of e){if("graph"===t.type&&"Variable"===t.name.termType)throw new Error("Detected illegal variable in GRAPH");if("bgp"===t.type||"graph"===t.type)for(const e of t.triples)if("Variable"===e.subject.termType||"Variable"===e.predicate.termType||"Variable"===e.object.termType)throw new Error("Detected illegal variable in BGP")}return e}function ta(e){for(const t of e)if("bgp"===t.type)for(const e of t.triples)if("BlankNode"===e.subject.termType||"BlankNode"===e.predicate.termType||"BlankNode"===e.object.termType)throw new Error("Detected illegal blank node in BGP");return e}var ra={EOF:1,parseError:function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},setInput:function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},unput:function(e){var t=e.length,r=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var a=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),r.length-1&&(this.yylineno-=r.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:r?(r.length===a.length?this.yylloc.first_column:0)+a[a.length-r.length].length-r[0].length:this.yylloc.first_column-t},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(e){this.unput(this.match.slice(e))},pastInput:function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},test_match:function(e,t){var r,a,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(a=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=a.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:a?a[a.length-1].length-a[a.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],r=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),r)return r;if(this._backtrack){for(var s in i)this[s]=i[s];return!1}return!1},next:function(){if(this.done)return this.EOF;var e,t,r,a;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var i=this._currentRules(),s=0;s<i.length;s++)if((r=this._input.match(this.rules[i[s]]))&&(!t||r[0].length>t[0].length)){if(t=r,a=s,this.options.backtrack_lexer){if(!1!==(e=this.test_match(r,i[s])))return e;if(this._backtrack){t=!1;continue}return!1}if(!this.options.flex)break}return t?!1!==(e=this.test_match(t,i[a]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var e=this.next();return e||this.lex()},begin:function(e){this.conditionStack.push(e)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},pushState:function(e){this.begin(e)},stateStackSize:function(){return this.conditionStack.length},options:{flex:!0,"case-insensitive":!0},performAction:function(e,t,r,a){switch(r){case 0:break;case 1:return 12;case 2:return 15;case 3:return 41;case 4:return 325;case 5:return 326;case 6:return 45;case 7:return 47;case 8:return 48;case 9:return 39;case 10:return 24;case 11:return 28;case 12:return 29;case 13:return 31;case 14:return 32;case 15:return 36;case 16:return 53;case 17:return 327;case 18:return 63;case 19:return 64;case 20:return 70;case 21:return 73;case 22:return 76;case 23:return 78;case 24:return 81;case 25:return 83;case 26:return 85;case 27:return 193;case 28:return 100;case 29:return 328;case 30:return 121;case 31:return 329;case 32:return 330;case 33:return 110;case 34:return 331;case 35:return 109;case 36:return 332;case 37:return 333;case 38:return 113;case 39:return 115;case 40:return 116;case 41:return 131;case 42:return 123;case 43:return 126;case 44:return 128;case 45:return 132;case 46:return 112;case 47:return 334;case 48:return 335;case 49:return 159;case 50:return 161;case 51:return 164;case 52:return 174;case 53:return 160;case 54:return 336;case 55:return 163;case 56:return 312;case 57:return 314;case 58:return 317;case 59:return 318;case 60:return 272;case 61:return 197;case 62:return 337;case 63:return 338;case 64:return 229;case 65:return 340;case 66:return 263;case 67:return 224;case 68:return 231;case 69:return 232;case 70:return 242;case 71:return 246;case 72:return 290;case 73:return 341;case 74:return 342;case 75:return 343;case 76:return 344;case 77:return 345;case 78:return 250;case 79:return 346;case 80:return 265;case 81:return 276;case 82:return 277;case 83:return 268;case 84:return 269;case 85:return 270;case 86:return 271;case 87:return 347;case 88:return 348;case 89:return 273;case 90:return 274;case 91:return 350;case 92:return 349;case 93:return 351;case 94:return 279;case 95:return 280;case 96:return 283;case 97:return 285;case 98:return 289;case 99:return 293;case 100:return 296;case 101:return 13;case 102:return 16;case 103:return 308;case 104:return 309;case 105:return 87;case 106:return 292;case 107:return 82;case 108:return 294;case 109:return 295;case 110:return 297;case 111:return 298;case 112:return 299;case 113:return 300;case 114:return 301;case 115:return 302;case 116:return"EXPONENT";case 117:return 303;case 118:return 304;case 119:return 305;case 120:return 306;case 121:return 89;case 122:return 310;case 123:return 6;case 124:return"INVALID";case 125:console.log(t.yytext)}},rules:[/^(?:\s+|(#[^\n\r]*))/i,/^(?:BASE)/i,/^(?:PREFIX)/i,/^(?:SELECT)/i,/^(?:DISTINCT)/i,/^(?:REDUCED)/i,/^(?:\()/i,/^(?:AS)/i,/^(?:\))/i,/^(?:\*)/i,/^(?:CONSTRUCT)/i,/^(?:WHERE)/i,/^(?:\{)/i,/^(?:\})/i,/^(?:DESCRIBE)/i,/^(?:ASK)/i,/^(?:FROM)/i,/^(?:NAMED)/i,/^(?:GROUP)/i,/^(?:BY)/i,/^(?:HAVING)/i,/^(?:ORDER)/i,/^(?:ASC)/i,/^(?:DESC)/i,/^(?:LIMIT)/i,/^(?:OFFSET)/i,/^(?:VALUES)/i,/^(?:;)/i,/^(?:LOAD)/i,/^(?:SILENT)/i,/^(?:INTO)/i,/^(?:CLEAR)/i,/^(?:DROP)/i,/^(?:CREATE)/i,/^(?:ADD)/i,/^(?:TO)/i,/^(?:MOVE)/i,/^(?:COPY)/i,/^(?:INSERT((\s+|(#[^\n\r]*)\n\r?)+)DATA)/i,/^(?:DELETE((\s+|(#[^\n\r]*)\n\r?)+)DATA)/i,/^(?:DELETE((\s+|(#[^\n\r]*)\n\r?)+)WHERE)/i,/^(?:WITH)/i,/^(?:DELETE)/i,/^(?:INSERT)/i,/^(?:USING)/i,/^(?:DEFAULT)/i,/^(?:GRAPH)/i,/^(?:ALL)/i,/^(?:\.)/i,/^(?:OPTIONAL)/i,/^(?:SERVICE)/i,/^(?:BIND)/i,/^(?:UNDEF)/i,/^(?:MINUS)/i,/^(?:UNION)/i,/^(?:FILTER)/i,/^(?:<<)/i,/^(?:>>)/i,/^(?:\{\|)/i,/^(?:\|\})/i,/^(?:,)/i,/^(?:a)/i,/^(?:\|)/i,/^(?:\/)/i,/^(?:\^)/i,/^(?:\?)/i,/^(?:\+)/i,/^(?:!)/i,/^(?:\[)/i,/^(?:\])/i,/^(?:\|\|)/i,/^(?:&&)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:IN)/i,/^(?:NOT)/i,/^(?:-)/i,/^(?:BOUND)/i,/^(?:BNODE)/i,/^(?:(RAND|NOW|UUID|STRUUID))/i,/^(?:(LANG|DATATYPE|IRI|URI|ABS|CEIL|FLOOR|ROUND|STRLEN|STR|UCASE|LCASE|ENCODE_FOR_URI|YEAR|MONTH|DAY|HOURS|MINUTES|SECONDS|TIMEZONE|TZ|MD5|SHA1|SHA256|SHA384|SHA512|isIRI|isURI|isBLANK|isLITERAL|isNUMERIC))/i,/^(?:(SUBJECT|PREDICATE|OBJECT|isTRIPLE))/i,/^(?:(LANGMATCHES|CONTAINS|STRSTARTS|STRENDS|STRBEFORE|STRAFTER|STRLANG|STRDT|sameTerm))/i,/^(?:CONCAT)/i,/^(?:COALESCE)/i,/^(?:IF)/i,/^(?:TRIPLE)/i,/^(?:REGEX)/i,/^(?:SUBSTR)/i,/^(?:REPLACE)/i,/^(?:EXISTS)/i,/^(?:COUNT)/i,/^(?:SUM|MIN|MAX|AVG|SAMPLE)/i,/^(?:GROUP_CONCAT)/i,/^(?:SEPARATOR)/i,/^(?:\^\^)/i,/^(?:true|false)/i,/^(?:(<(?:[^<>\"\{\}\|\^`\\\u0000-\u0020])*>))/i,/^(?:((([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?)?:))/i,/^(?:(((([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?)?:)((?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|:|[0-9]|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%)))))?)))/i,/^(?:(_:(?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?))/i,/^(?:([\?\$]((?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9])(?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])*)))/i,/^(?:(@[a-zA-Z]+(?:-[a-zA-Z0-9]+)*))/i,/^(?:([0-9]+))/i,/^(?:([0-9]*\.[0-9]+))/i,/^(?:([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+)))/i,/^(?:(\+([0-9]+)))/i,/^(?:(\+([0-9]*\.[0-9]+)))/i,/^(?:(\+([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:(-([0-9]+)))/i,/^(?:(-([0-9]*\.[0-9]+)))/i,/^(?:(-([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:([eE][+-]?[0-9]+))/i,/^(?:('(?:(?:[^\u0027\u005C\u000A\u000D])|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*'))/i,/^(?:("(?:(?:[^\u0022\u005C\u000A\u000D])|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*"))/i,/^(?:('''(?:(?:'|'')?(?:[^'\\]|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*'''))/i,/^(?:("""(?:(?:"|"")?(?:[^\"\\]|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*"""))/i,/^(?:(\((\u0020|\u0009|\u000D|\u000A)*\)))/i,/^(?:(\[(\u0020|\u0009|\u000D|\u000A)*\]))/i,/^(?:$)/i,/^(?:.)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],inclusive:!0}}};function aa(){this.yy={}}return sr.lexer=ra,aa.prototype=sr,sr.Parser=aa,new aa}();t.exports=a},{"./Wildcard":11}],11:[function(e,t,r){class a{constructor(){return i||this}equals(e){return e&&this.termType===e.termType}}Object.defineProperty(a.prototype,"value",{enumerable:!0,value:"*"}),Object.defineProperty(a.prototype,"termType",{enumerable:!0,value:"Wildcard"});var i=new a;t.exports.Wildcard=a},{}],sparqljs:[function(e,t,r){var a=e("./lib/SparqlParser").Parser,i=e("./lib/SparqlGenerator"),s=e("./lib/Wildcard").Wildcard,{DataFactory:n}=e("rdf-data-factory");t.exports={Parser:function({prefixes:e,baseIRI:t,factory:r,sparqlStar:i,skipValidation:s,skipUngroupedVariableCheck:u,pathOnly:o}={}){var c={};for(var l in e||{})c[l]=e[l];var p=new a;return p.parse=function(){return a.base=t||"",a.prefixes=Object.create(c),a.factory=r||new n,a.sparqlStar=Boolean(i),a.pathOnly=Boolean(o),a.skipValidation=Boolean(s)||Boolean(u),a.prototype.parse.apply(p,arguments)},p._resetBlanks=a._resetBlanks,p},Generator:i,Wildcard:s}},{"./lib/SparqlGenerator":9,"./lib/SparqlParser":10,"./lib/Wildcard":11,"rdf-data-factory":1}]},{},[]);